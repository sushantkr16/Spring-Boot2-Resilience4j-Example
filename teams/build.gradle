plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.sk.learn'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR3")
}
configurations {
    // exclude Reactor Netty
    compile.exclude module: 'spring-boot-starter-reactor-netty'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-webflux'
    compile 'org.springframework.boot:spring-boot-starter-tomcat'
    compile group: 'io.projectreactor.netty', name: 'reactor-netty', version: '0.9.6.RELEASE'

    compileOnly "org.projectlombok:lombok:1.18.10"
    testCompileOnly "org.projectlombok:lombok:1.18.10"
    annotationProcessor "org.projectlombok:lombok:1.18.10"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.10"

    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

    compile ("io.github.resilience4j:resilience4j-spring-boot2:1.3.1") {
        exclude group: 'io.github.resilience4j', module: 'resilience4j-circuitbreaker'
        exclude group: 'io.github.resilience4j', module: 'resilience4j-micrometer'
        exclude group: 'io.github.resilience4j', module: 'resilience4j-timelimiter'
    }
    compile("io.github.resilience4j:resilience4j-circuitbreaker:1.3.1")
    compile("io.github.resilience4j:resilience4j-micrometer:1.3.1")
    compile("io.github.resilience4j:resilience4j-timelimiter:1.3.1")
    compile("io.github.resilience4j:resilience4j-reactor:1.3.1")
    compile("io.micrometer:micrometer-registry-prometheus:1.3.1")

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
